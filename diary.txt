27/07/19    14:12   18:34   planning the design of the login/main/signup pages without any routing. each pages should have the design template (50% done in terms of formatting).
27/07/19    22:41   05:44   designing and connecting the frontend to the backend with simple public post fetching. future looks great not gonna lie.
28/07/19    15:04   18:27   finding a way to do routing after Alex's advice on piazza forum. so far, I've added template routing for the three pages. still need to find a way to format the link bar.
28/07/19    22:52   06:18   finishing milestone 0 and 1 with the routing. there are still some modification needed for the css to make the page looks amazing. user can now login with token stored. invalid auth gets ignored and needs to be fixed later. meanwhile, i am going to focus on my 2511 assignment which is due next sundah.
30/07/19    20:55   21:30   got bored of java and got some energy to rework on the throw-catch on failed authentication (login/signup). worked on it and seems that my code works as what i wanted: showing response status and the following message on failed auth process. i will commit this version to remote so that i can work on this assignment in case i want it (most likely will happen, this stuff is fun ngl)
31/07/19    22:55   23:03   updating login and signup so that the hash updates. previously, the hash did not update (since the login only calls homePage function)
04/07/19    20:08   20:51   get a working thumbnail for public posts
04/07/19    22:21   00:46   setting up template for user page. will continue later
05/07/19    01:29   02:43   after eating my midnight ramen, i decided to implement the idea that came out after answering piazza forum on page refresh behaviour (thanks anon user). the implementation is a bit buggy in the beginning, but managed to make it work without any problem. besides that, i also made some css for the user details on user page (#u/username). not bad. i feel really effective
06/07/19    13:31   13:43   modified username ("Logged in as user x") to use two <a> instead of innerHTML, and then adjust the class for the username's <a> to have pointer cursor and bold, which routes the page to the user page on click
06/07/19    19:19   22:14   setting userID inside the localstorage for upvote purpose (later). and then submit form on enter press for both login and signup. afterwards, create a working modal (successfully) for any login or invalid input error. at this moment, there is only one type of modal. rest will be added later.
08/07/19    04:26   05:53   worked on post content and upvote button dummy (prevents upvote without credentials). post content will expand on clicking the expand button.
09/07/19    22:14   09:49   reworking everything so that the code looks neat. adding a route and modal for post. heavy modification on css to make everything looks better.
10/07/19    23:41   08:14   heavy work on comments, upvotes, and better-looking posts, with active buttons from material icons. logged-in users can now see comments, add comments (and updated instantly), upvote post, and add/remove vote from post (also updated instantly). besides that, user can also post with a picture. Coverage: [L0: 95%, L1: 95% (no hot links for all pages, should be easy to implement), L2: 90% (no pagination), L3: 50%, L4: 20%]. Passed all autotests.
11/07/19    17:58   05:38    working on individual post with a way to delete/update post. rework on user page so that user can update their profile. there was a route bug where user won't get the intended error, hence reworking on error modal. most L3 stuff is implemented apart from subseddit search. navigation is added on the right side of the window, making it easy for user to access. infinite scroll is also added only for main page.
12/07/19    06:21   07:31   added all subseddit (s/all) with a poorly implemented crawler
12/07/19    13:48   16:03   updated s/all with a better implementation of crawler (probably need a webworker for that). added simple search engine with simple regex.
12/07/19    17:11   19:37   after getting my food, i implemented the subseddit and all subseddit with less bug. everything should be fine by now.
12/07/19    19:37   21:12   fixing minor bugs and confusing UI's. There should be no user-side errors (apart from console obviously).
12/07/19    22:08   23:05   learned that the assignment is due tomorrow... redoing some of infinite scroll so that it works smoothly (with event listener instead of polling the function).
13/07/19    00:31   01:13   finished on all needed infinite scroll (search and subseddit)
13/07/19    01:49   03:41   heavy modification on UI for convenience, and then dedicated page for search and its functionality.
13/07/19    03:55   06:52   trying to implement the service worker but can't do anything. piazza said that we need to implement subseddits from /user/feed. MY HARD WORK ON MULTIPLE PUBLIC SUBSEDDITS IS WASTED!!!!ASDFGHJKL!@#$%^&. i put the all subseddit in infinitewall, because i don't want my hard work to be wasted like that...
13/07/19    13:21   15:11   service worker, it works (AT LAST!). user can now go offline and still be able to do stuff for any get requests.
13/07/19    15:15   16:23   updated errors on service workers for user experience
13/07/19    16:23   17:19   updated search to include public subseddit with great matching pattern implementation (I call it monster regex: /^#s\/\:?(\w+)\&all\=(.*)$/)
13/07/19    17:19   18:03   full search functionality (including public posts to search)
